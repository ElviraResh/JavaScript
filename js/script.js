'use strict'
// Типы данных

// NaN - тип данных number
// String - строка (любой тип данных)
// Boolean - булевый тип данных (true, false)
// Undefined - неопределенность (симантически создан для того чтобы его просчитывал компьютер, а не программист)
// Null - ничего, для явного указания значения

// типизация -классификация информации

/* let a; // переменная без значения на самом деле имеет тип undefined (ничего)
console.log(a);
typeof a; // undefined */

// динамическая и статическая типизация (когда)
// код конвертируется в понятную для запуска компьютером форму - компиляция.
// промежуток времени. за который это происходит - стадия компиляции (compile time)

// проверка типов и поиск ошибок типизации на стадии компиляции (статическая). 
// перед запуском программы (С#, C++, Java)

// проверка типов и поиск ошибок типизации на стадии исполнения (динамическая).
// в период исполнения программы (js, php, ruby)

// слабая и сильная типизация (насколько серьезно)
// слабая - нестрогая типизация
// сильная - более строгая типизация

// 4 * '7' = 28 // js имеет представление о типах данных => у него слабая типизация

// switchcase

/* const simpleNum = num => {
    let answer = true;
    if (num < 2) {
        return false
    }
    for (let i = 2; i < num; i++) {
        if (num % i === 0) {
            answer = false;
        }
    }
    return answer;
}

console.log(simpleNum(5)); */

